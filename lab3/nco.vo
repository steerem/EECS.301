//IP Functional Simulation Model
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_simgen 2013:10:23:18:05:48:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altsyncram 3 lpm_add_sub 4 lpm_counter 1 lpm_mult 2 lut 168 mux21 82 oper_add 2 
`timescale 1 ps / 1 ps
module  NCO
	( 
	clk,
	clken,
	fsin_o,
	out_valid,
	phi_inc_i,
	reset_n) /* synthesis synthesis_clearbox=1 */;
	input   clk;
	input   clken;
	output   [11:0]  fsin_o;
	output   out_valid;
	input   [19:0]  phi_inc_i;
	input   reset_n;

	wire  [11:0]   wire_nil0i_q_a;
	wire  [11:0]   wire_nil0i_q_b;
	wire  [11:0]   wire_nil0l_q_a;
	wire  [11:0]   wire_nil0O_q_a;
	reg	n010l13;
	reg	n010l14;
	reg	n011i19;
	reg	n011i20;
	reg	n011l17;
	reg	n011l18;
	reg	n011O15;
	reg	n011O16;
	reg	n01ii11;
	reg	n01ii12;
	reg	n01il10;
	reg	n01il9;
	reg	n01li7;
	reg	n01li8;
	reg	n01ll5;
	reg	n01ll6;
	reg	n01Ol3;
	reg	n01Ol4;
	reg	n01OO1;
	reg	n01OO2;
	reg	n1OlO25;
	reg	n1OlO26;
	reg	n1OOl23;
	reg	n1OOl24;
	reg	n1OOO21;
	reg	n1OOO22;
	reg	n00i;
	reg	n0lOl;
	reg	n0lOO;
	reg	n0O0i;
	reg	n0O1i;
	reg	n0O1l;
	reg	n0Oil;
	reg	n0Oll;
	reg	n0OOi;
	reg	ni00i;
	reg	ni00l;
	reg	ni00O;
	reg	ni01i;
	reg	ni01l;
	reg	ni01O;
	reg	ni0ii;
	reg	ni0il;
	reg	ni0iO;
	reg	ni0li;
	reg	ni0ll;
	reg	ni0lO;
	reg	ni0Oi;
	reg	ni0Ol;
	reg	ni0OO;
	reg	ni11i;
	reg	ni11l;
	reg	ni1iO;
	reg	ni1ll;
	reg	ni1lO;
	reg	ni1Oi;
	reg	ni1Ol;
	reg	ni1OO;
	reg	nii0i;
	reg	nii0l;
	reg	nii0O;
	reg	nii1i;
	reg	nii1l;
	reg	nii1O;
	reg	niiii;
	reg	niiil;
	reg	niiiO;
	reg	niili;
	reg	niill;
	reg	niilO;
	reg	niiOi;
	reg	niiOl;
	reg	niiOO;
	reg	nil1i;
	reg	nil1l;
	reg	n01O_clk_prev;
	wire	wire_n01O_CLRN;
	wire	wire_n01O_PRN;
	reg	n0O0l;
	reg	n0O0O;
	reg	n0O1O;
	reg	n0Oii;
	reg	n0OiO;
	reg	n0Oli;
	reg	n0OlO;
	reg	n0OOl;
	reg	n0OOO;
	reg	ni10i;
	reg	ni11O_clk_prev;
	wire	wire_ni11O_CLRN;
	wire	wire_ni11O_PRN;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n00ii;
	reg	n00il;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00Oi;
	reg	n00Ol;
	reg	n00OO;
	reg	n01i;
	reg	n01l;
	reg	n0i0i;
	reg	n0i0l;
	reg	n0i0O;
	reg	n0i1i;
	reg	n0i1l;
	reg	n0i1O;
	reg	n0iii;
	reg	n0lOi;
	reg	n10i;
	reg	n1ii;
	reg	n1il;
	reg	n1iO;
	reg	n1li;
	reg	n1ll;
	reg	n1lO;
	reg	n1Oi;
	reg	n1Ol;
	reg	n1OO;
	reg	ni0i;
	reg	nilli;
	reg	nilll;
	reg	nillO;
	reg	nilOi;
	reg	nilOl;
	reg	nilOO;
	reg	niO0i;
	reg	niO0l;
	reg	niO0O;
	reg	niO1i;
	reg	niO1l;
	reg	niO1O;
	reg	niOii;
	reg	niOil;
	reg	niOiO;
	reg	niOli;
	reg	niOll;
	reg	niOlO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl00i;
	reg	nl00l;
	reg	nl00O;
	reg	nl01i;
	reg	nl01l;
	reg	nl01O;
	reg	nl0ii;
	reg	nl0il;
	reg	nl0iO;
	reg	nl0li;
	reg	nl0ll;
	reg	nl0lO;
	reg	nl0Oi;
	reg	nl10i;
	reg	nl10l;
	reg	nl10O;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nl1ii;
	reg	nl1il;
	reg	nl1iO;
	reg	nl1li;
	reg	nl1ll;
	reg	nl1lO;
	reg	nl1Oi;
	reg	nl1Ol;
	reg	nl1OO;
	wire	wire_ni1O_CLRN;
	reg	niiO;
	reg	niil_clk_prev;
	wire	wire_niil_CLRN;
	wire	wire_niil_PRN;
	wire	wire_niil_ENA;
	wire  [19:0]   wire_n001O_result;
	wire  [11:0]   wire_n10l_result;
	wire  [19:0]   wire_ni1li_result;
	wire  [24:0]   wire_niliO_result;
	wire  [3:0]   wire_ni0l_q;
	wire  [23:0]   wire_nilii_result;
	wire  [23:0]   wire_nilil_result;
	wire	wire_n00l_dataout;
	wire	wire_n00O_dataout;
	wire	wire_n0ii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0il_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0li_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0ll_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lO_dataout;
	wire	wire_n0Oi_dataout;
	wire	wire_n0Ol_dataout;
	wire	wire_n0OO_dataout;
	wire	wire_n11i_dataout;
	wire	wire_n11l_dataout;
	wire	wire_n11O_dataout;
	wire	wire_ni1i_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0l_dataout;
	wire	wire_nli0O_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nliii_dataout;
	wire	wire_nliil_dataout;
	wire	wire_nliiO_dataout;
	wire	wire_nlili_dataout;
	wire	wire_nlill_dataout;
	wire	wire_nlilO_dataout;
	wire	wire_nliOi_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0O_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlOii_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOli_dataout;
	wire	wire_nlOll_dataout;
	wire	wire_nlOlO_dataout;
	wire	wire_nlOOi_dataout;
	wire	wire_nlOOl_dataout;
	wire	wire_nlOOO_dataout;
	wire  [4:0]   wire_ni10l_o;
	wire  [7:0]   wire_nil1O_o;
	wire  n001i;
	wire  n01iO;

	altsyncram   nil0i
	( 
	.address_a({nil1i, niiOO, niiOl, niiOi, niilO, niill, niili}),
	.address_b({niiiO, niiil, niiii, nii0O, nii0l, nii0i, nii1O}),
	.clock0(clk),
	.clocken0(clken),
	.data_a({12{1'b0}}),
	.data_b({12{1'b0}}),
	.eccstatus(),
	.q_a(wire_nil0i_q_a),
	.q_b(wire_nil0i_q_b),
	.wren_a(1'b0),
	.wren_b(1'b0),
	.aclr0(),
	.aclr1(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.rden_a(),
	.rden_b()
	);
	defparam
		nil0i.address_aclr_a = "NONE",
		nil0i.address_aclr_b = "NONE",
		nil0i.address_reg_b = "CLOCK0",
		nil0i.byte_size = 8,
		nil0i.byteena_aclr_a = "NONE",
		nil0i.byteena_aclr_b = "NONE",
		nil0i.byteena_reg_b = "CLOCK1",
		nil0i.clock_enable_core_a = "USE_INPUT_CLKEN",
		nil0i.clock_enable_core_b = "USE_INPUT_CLKEN",
		nil0i.clock_enable_input_a = "NORMAL",
		nil0i.clock_enable_input_b = "NORMAL",
		nil0i.clock_enable_output_a = "NORMAL",
		nil0i.clock_enable_output_b = "NORMAL",
		nil0i.ecc_pipeline_stage_enabled = "FALSE",
		nil0i.enable_ecc = "FALSE",
		nil0i.indata_aclr_a = "NONE",
		nil0i.indata_aclr_b = "NONE",
		nil0i.indata_reg_b = "CLOCK0",
		nil0i.init_file = "NCO_sin_c.hex",
		nil0i.init_file_layout = "PORT_A",
		nil0i.intended_device_family = "Cyclone III",
		nil0i.numwords_a = 128,
		nil0i.numwords_b = 128,
		nil0i.operation_mode = "BIDIR_DUAL_PORT",
		nil0i.outdata_aclr_a = "NONE",
		nil0i.outdata_aclr_b = "NONE",
		nil0i.outdata_reg_a = "CLOCK0",
		nil0i.outdata_reg_b = "CLOCK0",
		nil0i.ram_block_type = "AUTO",
		nil0i.rdcontrol_aclr_b = "NONE",
		nil0i.rdcontrol_reg_b = "CLOCK1",
		nil0i.read_during_write_mode_mixed_ports = "DONT_CARE",
		nil0i.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nil0i.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nil0i.width_a = 12,
		nil0i.width_b = 12,
		nil0i.width_byteena_a = 1,
		nil0i.width_byteena_b = 1,
		nil0i.width_eccstatus = 3,
		nil0i.widthad_a = 7,
		nil0i.widthad_b = 7,
		nil0i.wrcontrol_aclr_a = "NONE",
		nil0i.wrcontrol_aclr_b = "NONE",
		nil0i.wrcontrol_wraddress_reg_b = "CLOCK0",
		nil0i.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   nil0l
	( 
	.address_a({nii1l, nii1i, ni0OO, ni0Ol, ni0Oi, ni0lO, ni0ll, nil1l}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_nil0l_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nil0l.address_aclr_a = "NONE",
		nil0l.address_aclr_b = "NONE",
		nil0l.address_reg_b = "CLOCK1",
		nil0l.byte_size = 8,
		nil0l.byteena_aclr_a = "NONE",
		nil0l.byteena_aclr_b = "NONE",
		nil0l.byteena_reg_b = "CLOCK1",
		nil0l.clock_enable_core_a = "USE_INPUT_CLKEN",
		nil0l.clock_enable_core_b = "USE_INPUT_CLKEN",
		nil0l.clock_enable_input_a = "NORMAL",
		nil0l.clock_enable_input_b = "NORMAL",
		nil0l.clock_enable_output_a = "NORMAL",
		nil0l.clock_enable_output_b = "NORMAL",
		nil0l.ecc_pipeline_stage_enabled = "FALSE",
		nil0l.enable_ecc = "FALSE",
		nil0l.indata_aclr_a = "NONE",
		nil0l.indata_aclr_b = "NONE",
		nil0l.indata_reg_b = "CLOCK1",
		nil0l.init_file = "NCO_sin_f.hex",
		nil0l.init_file_layout = "PORT_A",
		nil0l.intended_device_family = "Cyclone III",
		nil0l.numwords_a = 256,
		nil0l.numwords_b = 1,
		nil0l.operation_mode = "ROM",
		nil0l.outdata_aclr_a = "NONE",
		nil0l.outdata_aclr_b = "NONE",
		nil0l.outdata_reg_a = "CLOCK0",
		nil0l.outdata_reg_b = "UNREGISTERED",
		nil0l.ram_block_type = "AUTO",
		nil0l.rdcontrol_aclr_b = "NONE",
		nil0l.rdcontrol_reg_b = "CLOCK1",
		nil0l.read_during_write_mode_mixed_ports = "DONT_CARE",
		nil0l.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nil0l.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nil0l.width_a = 12,
		nil0l.width_b = 1,
		nil0l.width_byteena_a = 1,
		nil0l.width_byteena_b = 1,
		nil0l.width_eccstatus = 3,
		nil0l.widthad_a = 8,
		nil0l.widthad_b = 1,
		nil0l.wrcontrol_aclr_a = "NONE",
		nil0l.wrcontrol_aclr_b = "NONE",
		nil0l.wrcontrol_wraddress_reg_b = "CLOCK1",
		nil0l.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   nil0O
	( 
	.address_a({nii1l, nii1i, ni0OO, ni0Ol, ni0Oi, ni0lO, ni0ll, nil1l}),
	.clock0(clk),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_nil0O_q_a),
	.q_b(),
	.aclr0(),
	.aclr1(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nil0O.address_aclr_a = "NONE",
		nil0O.address_aclr_b = "NONE",
		nil0O.address_reg_b = "CLOCK1",
		nil0O.byte_size = 8,
		nil0O.byteena_aclr_a = "NONE",
		nil0O.byteena_aclr_b = "NONE",
		nil0O.byteena_reg_b = "CLOCK1",
		nil0O.clock_enable_core_a = "USE_INPUT_CLKEN",
		nil0O.clock_enable_core_b = "USE_INPUT_CLKEN",
		nil0O.clock_enable_input_a = "NORMAL",
		nil0O.clock_enable_input_b = "NORMAL",
		nil0O.clock_enable_output_a = "NORMAL",
		nil0O.clock_enable_output_b = "NORMAL",
		nil0O.ecc_pipeline_stage_enabled = "FALSE",
		nil0O.enable_ecc = "FALSE",
		nil0O.indata_aclr_a = "NONE",
		nil0O.indata_aclr_b = "NONE",
		nil0O.indata_reg_b = "CLOCK1",
		nil0O.init_file = "NCO_cos_f.hex",
		nil0O.init_file_layout = "PORT_A",
		nil0O.intended_device_family = "Cyclone III",
		nil0O.numwords_a = 256,
		nil0O.numwords_b = 1,
		nil0O.operation_mode = "ROM",
		nil0O.outdata_aclr_a = "NONE",
		nil0O.outdata_aclr_b = "NONE",
		nil0O.outdata_reg_a = "CLOCK0",
		nil0O.outdata_reg_b = "UNREGISTERED",
		nil0O.ram_block_type = "AUTO",
		nil0O.rdcontrol_aclr_b = "NONE",
		nil0O.rdcontrol_reg_b = "CLOCK1",
		nil0O.read_during_write_mode_mixed_ports = "DONT_CARE",
		nil0O.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nil0O.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nil0O.width_a = 12,
		nil0O.width_b = 1,
		nil0O.width_byteena_a = 1,
		nil0O.width_byteena_b = 1,
		nil0O.width_eccstatus = 3,
		nil0O.widthad_a = 8,
		nil0O.widthad_b = 1,
		nil0O.wrcontrol_aclr_a = "NONE",
		nil0O.wrcontrol_aclr_b = "NONE",
		nil0O.wrcontrol_wraddress_reg_b = "CLOCK1",
		nil0O.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		n010l13 = 0;
	always @ ( posedge clk)
		  n010l13 <= n010l14;
	event n010l13_event;
	initial
		#1 ->n010l13_event;
	always @(n010l13_event)
		n010l13 <= {1{1'b1}};
	initial
		n010l14 = 0;
	always @ ( posedge clk)
		  n010l14 <= n010l13;
	initial
		n011i19 = 0;
	always @ ( posedge clk)
		  n011i19 <= n011i20;
	event n011i19_event;
	initial
		#1 ->n011i19_event;
	always @(n011i19_event)
		n011i19 <= {1{1'b1}};
	initial
		n011i20 = 0;
	always @ ( posedge clk)
		  n011i20 <= n011i19;
	initial
		n011l17 = 0;
	always @ ( posedge clk)
		  n011l17 <= n011l18;
	event n011l17_event;
	initial
		#1 ->n011l17_event;
	always @(n011l17_event)
		n011l17 <= {1{1'b1}};
	initial
		n011l18 = 0;
	always @ ( posedge clk)
		  n011l18 <= n011l17;
	initial
		n011O15 = 0;
	always @ ( posedge clk)
		  n011O15 <= n011O16;
	event n011O15_event;
	initial
		#1 ->n011O15_event;
	always @(n011O15_event)
		n011O15 <= {1{1'b1}};
	initial
		n011O16 = 0;
	always @ ( posedge clk)
		  n011O16 <= n011O15;
	initial
		n01ii11 = 0;
	always @ ( posedge clk)
		  n01ii11 <= n01ii12;
	event n01ii11_event;
	initial
		#1 ->n01ii11_event;
	always @(n01ii11_event)
		n01ii11 <= {1{1'b1}};
	initial
		n01ii12 = 0;
	always @ ( posedge clk)
		  n01ii12 <= n01ii11;
	initial
		n01il10 = 0;
	always @ ( posedge clk)
		  n01il10 <= n01il9;
	initial
		n01il9 = 0;
	always @ ( posedge clk)
		  n01il9 <= n01il10;
	event n01il9_event;
	initial
		#1 ->n01il9_event;
	always @(n01il9_event)
		n01il9 <= {1{1'b1}};
	initial
		n01li7 = 0;
	always @ ( posedge clk)
		  n01li7 <= n01li8;
	event n01li7_event;
	initial
		#1 ->n01li7_event;
	always @(n01li7_event)
		n01li7 <= {1{1'b1}};
	initial
		n01li8 = 0;
	always @ ( posedge clk)
		  n01li8 <= n01li7;
	initial
		n01ll5 = 0;
	always @ ( posedge clk)
		  n01ll5 <= n01ll6;
	event n01ll5_event;
	initial
		#1 ->n01ll5_event;
	always @(n01ll5_event)
		n01ll5 <= {1{1'b1}};
	initial
		n01ll6 = 0;
	always @ ( posedge clk)
		  n01ll6 <= n01ll5;
	initial
		n01Ol3 = 0;
	always @ ( posedge clk)
		  n01Ol3 <= n01Ol4;
	event n01Ol3_event;
	initial
		#1 ->n01Ol3_event;
	always @(n01Ol3_event)
		n01Ol3 <= {1{1'b1}};
	initial
		n01Ol4 = 0;
	always @ ( posedge clk)
		  n01Ol4 <= n01Ol3;
	initial
		n01OO1 = 0;
	always @ ( posedge clk)
		  n01OO1 <= n01OO2;
	event n01OO1_event;
	initial
		#1 ->n01OO1_event;
	always @(n01OO1_event)
		n01OO1 <= {1{1'b1}};
	initial
		n01OO2 = 0;
	always @ ( posedge clk)
		  n01OO2 <= n01OO1;
	initial
		n1OlO25 = 0;
	always @ ( posedge clk)
		  n1OlO25 <= n1OlO26;
	event n1OlO25_event;
	initial
		#1 ->n1OlO25_event;
	always @(n1OlO25_event)
		n1OlO25 <= {1{1'b1}};
	initial
		n1OlO26 = 0;
	always @ ( posedge clk)
		  n1OlO26 <= n1OlO25;
	initial
		n1OOl23 = 0;
	always @ ( posedge clk)
		  n1OOl23 <= n1OOl24;
	event n1OOl23_event;
	initial
		#1 ->n1OOl23_event;
	always @(n1OOl23_event)
		n1OOl23 <= {1{1'b1}};
	initial
		n1OOl24 = 0;
	always @ ( posedge clk)
		  n1OOl24 <= n1OOl23;
	initial
		n1OOO21 = 0;
	always @ ( posedge clk)
		  n1OOO21 <= n1OOO22;
	event n1OOO21_event;
	initial
		#1 ->n1OOO21_event;
	always @(n1OOO21_event)
		n1OOO21 <= {1{1'b1}};
	initial
		n1OOO22 = 0;
	always @ ( posedge clk)
		  n1OOO22 <= n1OOO21;
	initial
	begin
		n00i = 0;
		n0lOl = 0;
		n0lOO = 0;
		n0O0i = 0;
		n0O1i = 0;
		n0O1l = 0;
		n0Oil = 0;
		n0Oll = 0;
		n0OOi = 0;
		ni00i = 0;
		ni00l = 0;
		ni00O = 0;
		ni01i = 0;
		ni01l = 0;
		ni01O = 0;
		ni0ii = 0;
		ni0il = 0;
		ni0iO = 0;
		ni0li = 0;
		ni0ll = 0;
		ni0lO = 0;
		ni0Oi = 0;
		ni0Ol = 0;
		ni0OO = 0;
		ni11i = 0;
		ni11l = 0;
		ni1iO = 0;
		ni1ll = 0;
		ni1lO = 0;
		ni1Oi = 0;
		ni1Ol = 0;
		ni1OO = 0;
		nii0i = 0;
		nii0l = 0;
		nii0O = 0;
		nii1i = 0;
		nii1l = 0;
		nii1O = 0;
		niiii = 0;
		niiil = 0;
		niiiO = 0;
		niili = 0;
		niill = 0;
		niilO = 0;
		niiOi = 0;
		niiOl = 0;
		niiOO = 0;
		nil1i = 0;
		nil1l = 0;
	end
	always @ (clk or wire_n01O_PRN or wire_n01O_CLRN)
	begin
		if (wire_n01O_PRN == 1'b0) 
		begin
			n00i <= 1;
			n0lOl <= 1;
			n0lOO <= 1;
			n0O0i <= 1;
			n0O1i <= 1;
			n0O1l <= 1;
			n0Oil <= 1;
			n0Oll <= 1;
			n0OOi <= 1;
			ni00i <= 1;
			ni00l <= 1;
			ni00O <= 1;
			ni01i <= 1;
			ni01l <= 1;
			ni01O <= 1;
			ni0ii <= 1;
			ni0il <= 1;
			ni0iO <= 1;
			ni0li <= 1;
			ni0ll <= 1;
			ni0lO <= 1;
			ni0Oi <= 1;
			ni0Ol <= 1;
			ni0OO <= 1;
			ni11i <= 1;
			ni11l <= 1;
			ni1iO <= 1;
			ni1ll <= 1;
			ni1lO <= 1;
			ni1Oi <= 1;
			ni1Ol <= 1;
			ni1OO <= 1;
			nii0i <= 1;
			nii0l <= 1;
			nii0O <= 1;
			nii1i <= 1;
			nii1l <= 1;
			nii1O <= 1;
			niiii <= 1;
			niiil <= 1;
			niiiO <= 1;
			niili <= 1;
			niill <= 1;
			niilO <= 1;
			niiOi <= 1;
			niiOl <= 1;
			niiOO <= 1;
			nil1i <= 1;
			nil1l <= 1;
		end
		else if  (wire_n01O_CLRN == 1'b0) 
		begin
			n00i <= 0;
			n0lOl <= 0;
			n0lOO <= 0;
			n0O0i <= 0;
			n0O1i <= 0;
			n0O1l <= 0;
			n0Oil <= 0;
			n0Oll <= 0;
			n0OOi <= 0;
			ni00i <= 0;
			ni00l <= 0;
			ni00O <= 0;
			ni01i <= 0;
			ni01l <= 0;
			ni01O <= 0;
			ni0ii <= 0;
			ni0il <= 0;
			ni0iO <= 0;
			ni0li <= 0;
			ni0ll <= 0;
			ni0lO <= 0;
			ni0Oi <= 0;
			ni0Ol <= 0;
			ni0OO <= 0;
			ni11i <= 0;
			ni11l <= 0;
			ni1iO <= 0;
			ni1ll <= 0;
			ni1lO <= 0;
			ni1Oi <= 0;
			ni1Ol <= 0;
			ni1OO <= 0;
			nii0i <= 0;
			nii0l <= 0;
			nii0O <= 0;
			nii1i <= 0;
			nii1l <= 0;
			nii1O <= 0;
			niiii <= 0;
			niiil <= 0;
			niiiO <= 0;
			niili <= 0;
			niill <= 0;
			niilO <= 0;
			niiOi <= 0;
			niiOl <= 0;
			niiOO <= 0;
			nil1i <= 0;
			nil1l <= 0;
		end
		else if  (clken == 1'b1) 
		if (clk != n01O_clk_prev && clk == 1'b1) 
		begin
			n00i <= (~ n01iO);
			n0lOl <= wire_ni10l_o[1];
			n0lOO <= wire_ni10l_o[2];
			n0O0i <= n0O1O;
			n0O1i <= wire_ni10l_o[3];
			n0O1l <= wire_ni10l_o[4];
			n0Oil <= n0Oii;
			n0Oll <= n0Oli;
			n0OOi <= n0OlO;
			ni00i <= wire_ni1li_result[13];
			ni00l <= wire_ni1li_result[14];
			ni00O <= wire_ni1li_result[15];
			ni01i <= wire_ni1li_result[10];
			ni01l <= wire_ni1li_result[11];
			ni01O <= wire_ni1li_result[12];
			ni0ii <= wire_ni1li_result[16];
			ni0il <= wire_ni1li_result[17];
			ni0iO <= wire_ni1li_result[18];
			ni0li <= wire_ni1li_result[19];
			ni0ll <= ni1lO;
			ni0lO <= ni1Oi;
			ni0Oi <= ni1Ol;
			ni0Ol <= ni1OO;
			ni0OO <= ni01i;
			ni11i <= n0OOO;
			ni11l <= ni11i;
			ni1iO <= wire_ni10l_o[0];
			ni1ll <= wire_ni1li_result[5];
			ni1lO <= wire_ni1li_result[6];
			ni1Oi <= wire_ni1li_result[7];
			ni1Ol <= wire_ni1li_result[8];
			ni1OO <= wire_ni1li_result[9];
			nii0i <= wire_nil1O_o[1];
			nii0l <= wire_nil1O_o[2];
			nii0O <= wire_nil1O_o[3];
			nii1i <= ni01l;
			nii1l <= ni01O;
			nii1O <= wire_nil1O_o[0];
			niiii <= wire_nil1O_o[4];
			niiil <= wire_nil1O_o[5];
			niiiO <= wire_nil1O_o[6];
			niili <= ni00i;
			niill <= ni00l;
			niilO <= ni00O;
			niiOi <= ni0ii;
			niiOl <= ni0il;
			niiOO <= ni0iO;
			nil1i <= ni0li;
			nil1l <= ni1ll;
		end
		n01O_clk_prev <= clk;
	end
	assign
		wire_n01O_CLRN = ((n01il10 ^ n01il9) & reset_n),
		wire_n01O_PRN = (n01ii12 ^ n01ii11);
	event n00i_event;
	event n0lOl_event;
	event n0lOO_event;
	event n0O0i_event;
	event n0O1i_event;
	event n0O1l_event;
	event n0Oil_event;
	event n0Oll_event;
	event n0OOi_event;
	event ni00i_event;
	event ni00l_event;
	event ni00O_event;
	event ni01i_event;
	event ni01l_event;
	event ni01O_event;
	event ni0ii_event;
	event ni0il_event;
	event ni0iO_event;
	event ni0li_event;
	event ni0ll_event;
	event ni0lO_event;
	event ni0Oi_event;
	event ni0Ol_event;
	event ni0OO_event;
	event ni11i_event;
	event ni11l_event;
	event ni1iO_event;
	event ni1ll_event;
	event ni1lO_event;
	event ni1Oi_event;
	event ni1Ol_event;
	event ni1OO_event;
	event nii0i_event;
	event nii0l_event;
	event nii0O_event;
	event nii1i_event;
	event nii1l_event;
	event nii1O_event;
	event niiii_event;
	event niiil_event;
	event niiiO_event;
	event niili_event;
	event niill_event;
	event niilO_event;
	event niiOi_event;
	event niiOl_event;
	event niiOO_event;
	event nil1i_event;
	event nil1l_event;
	initial
		#1 ->n00i_event;
	initial
		#1 ->n0lOl_event;
	initial
		#1 ->n0lOO_event;
	initial
		#1 ->n0O0i_event;
	initial
		#1 ->n0O1i_event;
	initial
		#1 ->n0O1l_event;
	initial
		#1 ->n0Oil_event;
	initial
		#1 ->n0Oll_event;
	initial
		#1 ->n0OOi_event;
	initial
		#1 ->ni00i_event;
	initial
		#1 ->ni00l_event;
	initial
		#1 ->ni00O_event;
	initial
		#1 ->ni01i_event;
	initial
		#1 ->ni01l_event;
	initial
		#1 ->ni01O_event;
	initial
		#1 ->ni0ii_event;
	initial
		#1 ->ni0il_event;
	initial
		#1 ->ni0iO_event;
	initial
		#1 ->ni0li_event;
	initial
		#1 ->ni0ll_event;
	initial
		#1 ->ni0lO_event;
	initial
		#1 ->ni0Oi_event;
	initial
		#1 ->ni0Ol_event;
	initial
		#1 ->ni0OO_event;
	initial
		#1 ->ni11i_event;
	initial
		#1 ->ni11l_event;
	initial
		#1 ->ni1iO_event;
	initial
		#1 ->ni1ll_event;
	initial
		#1 ->ni1lO_event;
	initial
		#1 ->ni1Oi_event;
	initial
		#1 ->ni1Ol_event;
	initial
		#1 ->ni1OO_event;
	initial
		#1 ->nii0i_event;
	initial
		#1 ->nii0l_event;
	initial
		#1 ->nii0O_event;
	initial
		#1 ->nii1i_event;
	initial
		#1 ->nii1l_event;
	initial
		#1 ->nii1O_event;
	initial
		#1 ->niiii_event;
	initial
		#1 ->niiil_event;
	initial
		#1 ->niiiO_event;
	initial
		#1 ->niili_event;
	initial
		#1 ->niill_event;
	initial
		#1 ->niilO_event;
	initial
		#1 ->niiOi_event;
	initial
		#1 ->niiOl_event;
	initial
		#1 ->niiOO_event;
	initial
		#1 ->nil1i_event;
	initial
		#1 ->nil1l_event;
	always @(n00i_event)
		n00i <= 1;
	always @(n0lOl_event)
		n0lOl <= 1;
	always @(n0lOO_event)
		n0lOO <= 1;
	always @(n0O0i_event)
		n0O0i <= 1;
	always @(n0O1i_event)
		n0O1i <= 1;
	always @(n0O1l_event)
		n0O1l <= 1;
	always @(n0Oil_event)
		n0Oil <= 1;
	always @(n0Oll_event)
		n0Oll <= 1;
	always @(n0OOi_event)
		n0OOi <= 1;
	always @(ni00i_event)
		ni00i <= 1;
	always @(ni00l_event)
		ni00l <= 1;
	always @(ni00O_event)
		ni00O <= 1;
	always @(ni01i_event)
		ni01i <= 1;
	always @(ni01l_event)
		ni01l <= 1;
	always @(ni01O_event)
		ni01O <= 1;
	always @(ni0ii_event)
		ni0ii <= 1;
	always @(ni0il_event)
		ni0il <= 1;
	always @(ni0iO_event)
		ni0iO <= 1;
	always @(ni0li_event)
		ni0li <= 1;
	always @(ni0ll_event)
		ni0ll <= 1;
	always @(ni0lO_event)
		ni0lO <= 1;
	always @(ni0Oi_event)
		ni0Oi <= 1;
	always @(ni0Ol_event)
		ni0Ol <= 1;
	always @(ni0OO_event)
		ni0OO <= 1;
	always @(ni11i_event)
		ni11i <= 1;
	always @(ni11l_event)
		ni11l <= 1;
	always @(ni1iO_event)
		ni1iO <= 1;
	always @(ni1ll_event)
		ni1ll <= 1;
	always @(ni1lO_event)
		ni1lO <= 1;
	always @(ni1Oi_event)
		ni1Oi <= 1;
	always @(ni1Ol_event)
		ni1Ol <= 1;
	always @(ni1OO_event)
		ni1OO <= 1;
	always @(nii0i_event)
		nii0i <= 1;
	always @(nii0l_event)
		nii0l <= 1;
	always @(nii0O_event)
		nii0O <= 1;
	always @(nii1i_event)
		nii1i <= 1;
	always @(nii1l_event)
		nii1l <= 1;
	always @(nii1O_event)
		nii1O <= 1;
	always @(niiii_event)
		niiii <= 1;
	always @(niiil_event)
		niiil <= 1;
	always @(niiiO_event)
		niiiO <= 1;
	always @(niili_event)
		niili <= 1;
	always @(niill_event)
		niill <= 1;
	always @(niilO_event)
		niilO <= 1;
	always @(niiOi_event)
		niiOi <= 1;
	always @(niiOl_event)
		niiOl <= 1;
	always @(niiOO_event)
		niiOO <= 1;
	always @(nil1i_event)
		nil1i <= 1;
	always @(nil1l_event)
		nil1l <= 1;
	initial
	begin
		n0O0l = 0;
		n0O0O = 0;
		n0O1O = 0;
		n0Oii = 0;
		n0OiO = 0;
		n0Oli = 0;
		n0OlO = 0;
		n0OOl = 0;
		n0OOO = 0;
		ni10i = 0;
	end
	always @ (clk or wire_ni11O_PRN or wire_ni11O_CLRN)
	begin
		if (wire_ni11O_PRN == 1'b0) 
		begin
			n0O0l <= 1;
			n0O0O <= 1;
			n0O1O <= 1;
			n0Oii <= 1;
			n0OiO <= 1;
			n0Oli <= 1;
			n0OlO <= 1;
			n0OOl <= 1;
			n0OOO <= 1;
			ni10i <= 1;
		end
		else if  (wire_ni11O_CLRN == 1'b0) 
		begin
			n0O0l <= 0;
			n0O0O <= 0;
			n0O1O <= 0;
			n0Oii <= 0;
			n0OiO <= 0;
			n0Oli <= 0;
			n0OlO <= 0;
			n0OOl <= 0;
			n0OOO <= 0;
			ni10i <= 0;
		end
		else if  (clken == 1'b1) 
		if (clk != ni11O_clk_prev && clk == 1'b1) 
		begin
			n0O0l <= n0O0i;
			n0O0O <= n0O0l;
			n0O1O <= (((ni10i ^ ni11l) ^ (n0OOO ^ n0O0O)) ^ (~ (n1OlO26 ^ n1OlO25)));
			n0Oii <= n0O0O;
			n0OiO <= n0Oil;
			n0Oli <= n0OiO;
			n0OlO <= n0Oll;
			n0OOl <= n0OOi;
			n0OOO <= n0OOl;
			ni10i <= ni11l;
		end
		ni11O_clk_prev <= clk;
	end
	assign
		wire_ni11O_CLRN = (n1OOO22 ^ n1OOO21),
		wire_ni11O_PRN = ((n1OOl24 ^ n1OOl23) & reset_n);
	event n0O0l_event;
	event n0O0O_event;
	event n0O1O_event;
	event n0Oii_event;
	event n0OiO_event;
	event n0Oli_event;
	event n0OlO_event;
	event n0OOl_event;
	event n0OOO_event;
	event ni10i_event;
	initial
		#1 ->n0O0l_event;
	initial
		#1 ->n0O0O_event;
	initial
		#1 ->n0O1O_event;
	initial
		#1 ->n0Oii_event;
	initial
		#1 ->n0OiO_event;
	initial
		#1 ->n0Oli_event;
	initial
		#1 ->n0OlO_event;
	initial
		#1 ->n0OOl_event;
	initial
		#1 ->n0OOO_event;
	initial
		#1 ->ni10i_event;
	always @(n0O0l_event)
		n0O0l <= 1;
	always @(n0O0O_event)
		n0O0O <= 1;
	always @(n0O1O_event)
		n0O1O <= 1;
	always @(n0Oii_event)
		n0Oii <= 1;
	always @(n0OiO_event)
		n0OiO <= 1;
	always @(n0Oli_event)
		n0Oli <= 1;
	always @(n0OlO_event)
		n0OlO <= 1;
	always @(n0OOl_event)
		n0OOl <= 1;
	always @(n0OOO_event)
		n0OOO <= 1;
	always @(ni10i_event)
		ni10i <= 1;
	initial
	begin
		n000i = 0;
		n000l = 0;
		n000O = 0;
		n00ii = 0;
		n00il = 0;
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00Oi = 0;
		n00Ol = 0;
		n00OO = 0;
		n01i = 0;
		n01l = 0;
		n0i0i = 0;
		n0i0l = 0;
		n0i0O = 0;
		n0i1i = 0;
		n0i1l = 0;
		n0i1O = 0;
		n0iii = 0;
		n0lOi = 0;
		n10i = 0;
		n1ii = 0;
		n1il = 0;
		n1iO = 0;
		n1li = 0;
		n1ll = 0;
		n1lO = 0;
		n1Oi = 0;
		n1Ol = 0;
		n1OO = 0;
		ni0i = 0;
		nilli = 0;
		nilll = 0;
		nillO = 0;
		nilOi = 0;
		nilOl = 0;
		nilOO = 0;
		niO0i = 0;
		niO0l = 0;
		niO0O = 0;
		niO1i = 0;
		niO1l = 0;
		niO1O = 0;
		niOii = 0;
		niOil = 0;
		niOiO = 0;
		niOli = 0;
		niOll = 0;
		niOlO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl00i = 0;
		nl00l = 0;
		nl00O = 0;
		nl01i = 0;
		nl01l = 0;
		nl01O = 0;
		nl0ii = 0;
		nl0il = 0;
		nl0iO = 0;
		nl0li = 0;
		nl0ll = 0;
		nl0lO = 0;
		nl0Oi = 0;
		nl10i = 0;
		nl10l = 0;
		nl10O = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nl1ii = 0;
		nl1il = 0;
		nl1iO = 0;
		nl1li = 0;
		nl1ll = 0;
		nl1lO = 0;
		nl1Oi = 0;
		nl1Ol = 0;
		nl1OO = 0;
	end
	always @ ( posedge clk or  negedge wire_ni1O_CLRN)
	begin
		if (wire_ni1O_CLRN == 1'b0) 
		begin
			n000i <= 0;
			n000l <= 0;
			n000O <= 0;
			n00ii <= 0;
			n00il <= 0;
			n00iO <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n00Oi <= 0;
			n00Ol <= 0;
			n00OO <= 0;
			n01i <= 0;
			n01l <= 0;
			n0i0i <= 0;
			n0i0l <= 0;
			n0i0O <= 0;
			n0i1i <= 0;
			n0i1l <= 0;
			n0i1O <= 0;
			n0iii <= 0;
			n0lOi <= 0;
			n10i <= 0;
			n1ii <= 0;
			n1il <= 0;
			n1iO <= 0;
			n1li <= 0;
			n1ll <= 0;
			n1lO <= 0;
			n1Oi <= 0;
			n1Ol <= 0;
			n1OO <= 0;
			ni0i <= 0;
			nilli <= 0;
			nilll <= 0;
			nillO <= 0;
			nilOi <= 0;
			nilOl <= 0;
			nilOO <= 0;
			niO0i <= 0;
			niO0l <= 0;
			niO0O <= 0;
			niO1i <= 0;
			niO1l <= 0;
			niO1O <= 0;
			niOii <= 0;
			niOil <= 0;
			niOiO <= 0;
			niOli <= 0;
			niOll <= 0;
			niOlO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl00i <= 0;
			nl00l <= 0;
			nl00O <= 0;
			nl01i <= 0;
			nl01l <= 0;
			nl01O <= 0;
			nl0ii <= 0;
			nl0il <= 0;
			nl0iO <= 0;
			nl0li <= 0;
			nl0ll <= 0;
			nl0lO <= 0;
			nl0Oi <= 0;
			nl10i <= 0;
			nl10l <= 0;
			nl10O <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nl1ii <= 0;
			nl1il <= 0;
			nl1iO <= 0;
			nl1li <= 0;
			nl1ll <= 0;
			nl1lO <= 0;
			nl1Oi <= 0;
			nl1Ol <= 0;
			nl1OO <= 0;
		end
		else 
		begin
			n000i <= wire_n0iiO_dataout;
			n000l <= wire_n0ili_dataout;
			n000O <= wire_n0ill_dataout;
			n00ii <= wire_n0ilO_dataout;
			n00il <= wire_n0iOi_dataout;
			n00iO <= wire_n0iOl_dataout;
			n00li <= wire_n0iOO_dataout;
			n00ll <= wire_n0l1i_dataout;
			n00lO <= wire_n0l1l_dataout;
			n00Oi <= wire_n0l1O_dataout;
			n00Ol <= wire_n0l0i_dataout;
			n00OO <= wire_n0l0l_dataout;
			n01i <= wire_n0OO_dataout;
			n01l <= wire_ni1i_dataout;
			n0i0i <= wire_n0liO_dataout;
			n0i0l <= wire_n0lli_dataout;
			n0i0O <= wire_n0lll_dataout;
			n0i1i <= wire_n0l0O_dataout;
			n0i1l <= wire_n0lii_dataout;
			n0i1O <= wire_n0lil_dataout;
			n0iii <= wire_n0llO_dataout;
			n0lOi <= wire_n0iil_dataout;
			n10i <= wire_nl0Ol_dataout;
			n1ii <= wire_n00O_dataout;
			n1il <= wire_n0ii_dataout;
			n1iO <= wire_n0il_dataout;
			n1li <= wire_n0iO_dataout;
			n1ll <= wire_n0li_dataout;
			n1lO <= wire_n0ll_dataout;
			n1Oi <= wire_n0lO_dataout;
			n1Ol <= wire_n0Oi_dataout;
			n1OO <= wire_n0Ol_dataout;
			ni0i <= wire_n00l_dataout;
			nilli <= wire_nl0OO_dataout;
			nilll <= wire_nli1i_dataout;
			nillO <= wire_nli1l_dataout;
			nilOi <= wire_nli1O_dataout;
			nilOl <= wire_nli0i_dataout;
			nilOO <= wire_nli0l_dataout;
			niO0i <= wire_nliiO_dataout;
			niO0l <= wire_nlili_dataout;
			niO0O <= wire_nlill_dataout;
			niO1i <= wire_nli0O_dataout;
			niO1l <= wire_nliii_dataout;
			niO1O <= wire_nliil_dataout;
			niOii <= wire_nlilO_dataout;
			niOil <= wire_nliOi_dataout;
			niOiO <= wire_nliOl_dataout;
			niOli <= wire_nliOO_dataout;
			niOll <= wire_nll1i_dataout;
			niOlO <= wire_nll1l_dataout;
			niOOi <= wire_nll1O_dataout;
			niOOl <= wire_nll0i_dataout;
			niOOO <= wire_nll0l_dataout;
			nl00i <= wire_nlOiO_dataout;
			nl00l <= wire_nlOli_dataout;
			nl00O <= wire_nlOll_dataout;
			nl01i <= wire_nlO0O_dataout;
			nl01l <= wire_nlOii_dataout;
			nl01O <= wire_nlOil_dataout;
			nl0ii <= wire_nlOlO_dataout;
			nl0il <= wire_nlOOi_dataout;
			nl0iO <= wire_nlOOl_dataout;
			nl0li <= wire_nlOOO_dataout;
			nl0ll <= wire_n11i_dataout;
			nl0lO <= wire_n11l_dataout;
			nl0Oi <= wire_n11O_dataout;
			nl10i <= wire_nlliO_dataout;
			nl10l <= wire_nllli_dataout;
			nl10O <= wire_nllll_dataout;
			nl11i <= wire_nll0O_dataout;
			nl11l <= wire_nllii_dataout;
			nl11O <= wire_nllil_dataout;
			nl1ii <= wire_nlllO_dataout;
			nl1il <= wire_nllOi_dataout;
			nl1iO <= wire_nllOl_dataout;
			nl1li <= wire_nllOO_dataout;
			nl1ll <= wire_nlO1i_dataout;
			nl1lO <= wire_nlO1l_dataout;
			nl1Oi <= wire_nlO1O_dataout;
			nl1Ol <= wire_nlO0i_dataout;
			nl1OO <= wire_nlO0l_dataout;
		end
	end
	assign
		wire_ni1O_CLRN = ((n01li8 ^ n01li7) & reset_n);
	event n000i_event;
	event n000l_event;
	event n000O_event;
	event n00ii_event;
	event n00il_event;
	event n00iO_event;
	event n00li_event;
	event n00ll_event;
	event n00lO_event;
	event n00Oi_event;
	event n00Ol_event;
	event n00OO_event;
	event n01i_event;
	event n01l_event;
	event n0i0i_event;
	event n0i0l_event;
	event n0i0O_event;
	event n0i1i_event;
	event n0i1l_event;
	event n0i1O_event;
	event n0iii_event;
	event n0lOi_event;
	event n10i_event;
	event n1ii_event;
	event n1il_event;
	event n1iO_event;
	event n1li_event;
	event n1ll_event;
	event n1lO_event;
	event n1Oi_event;
	event n1Ol_event;
	event n1OO_event;
	event ni0i_event;
	event nilli_event;
	event nilll_event;
	event nillO_event;
	event nilOi_event;
	event nilOl_event;
	event nilOO_event;
	event niO0i_event;
	event niO0l_event;
	event niO0O_event;
	event niO1i_event;
	event niO1l_event;
	event niO1O_event;
	event niOii_event;
	event niOil_event;
	event niOiO_event;
	event niOli_event;
	event niOll_event;
	event niOlO_event;
	event niOOi_event;
	event niOOl_event;
	event niOOO_event;
	event nl00i_event;
	event nl00l_event;
	event nl00O_event;
	event nl01i_event;
	event nl01l_event;
	event nl01O_event;
	event nl0ii_event;
	event nl0il_event;
	event nl0iO_event;
	event nl0li_event;
	event nl0ll_event;
	event nl0lO_event;
	event nl0Oi_event;
	event nl10i_event;
	event nl10l_event;
	event nl10O_event;
	event nl11i_event;
	event nl11l_event;
	event nl11O_event;
	event nl1ii_event;
	event nl1il_event;
	event nl1iO_event;
	event nl1li_event;
	event nl1ll_event;
	event nl1lO_event;
	event nl1Oi_event;
	event nl1Ol_event;
	event nl1OO_event;
	initial
		#1 ->n000i_event;
	initial
		#1 ->n000l_event;
	initial
		#1 ->n000O_event;
	initial
		#1 ->n00ii_event;
	initial
		#1 ->n00il_event;
	initial
		#1 ->n00iO_event;
	initial
		#1 ->n00li_event;
	initial
		#1 ->n00ll_event;
	initial
		#1 ->n00lO_event;
	initial
		#1 ->n00Oi_event;
	initial
		#1 ->n00Ol_event;
	initial
		#1 ->n00OO_event;
	initial
		#1 ->n01i_event;
	initial
		#1 ->n01l_event;
	initial
		#1 ->n0i0i_event;
	initial
		#1 ->n0i0l_event;
	initial
		#1 ->n0i0O_event;
	initial
		#1 ->n0i1i_event;
	initial
		#1 ->n0i1l_event;
	initial
		#1 ->n0i1O_event;
	initial
		#1 ->n0iii_event;
	initial
		#1 ->n0lOi_event;
	initial
		#1 ->n10i_event;
	initial
		#1 ->n1ii_event;
	initial
		#1 ->n1il_event;
	initial
		#1 ->n1iO_event;
	initial
		#1 ->n1li_event;
	initial
		#1 ->n1ll_event;
	initial
		#1 ->n1lO_event;
	initial
		#1 ->n1Oi_event;
	initial
		#1 ->n1Ol_event;
	initial
		#1 ->n1OO_event;
	initial
		#1 ->ni0i_event;
	initial
		#1 ->nilli_event;
	initial
		#1 ->nilll_event;
	initial
		#1 ->nillO_event;
	initial
		#1 ->nilOi_event;
	initial
		#1 ->nilOl_event;
	initial
		#1 ->nilOO_event;
	initial
		#1 ->niO0i_event;
	initial
		#1 ->niO0l_event;
	initial
		#1 ->niO0O_event;
	initial
		#1 ->niO1i_event;
	initial
		#1 ->niO1l_event;
	initial
		#1 ->niO1O_event;
	initial
		#1 ->niOii_event;
	initial
		#1 ->niOil_event;
	initial
		#1 ->niOiO_event;
	initial
		#1 ->niOli_event;
	initial
		#1 ->niOll_event;
	initial
		#1 ->niOlO_event;
	initial
		#1 ->niOOi_event;
	initial
		#1 ->niOOl_event;
	initial
		#1 ->niOOO_event;
	initial
		#1 ->nl00i_event;
	initial
		#1 ->nl00l_event;
	initial
		#1 ->nl00O_event;
	initial
		#1 ->nl01i_event;
	initial
		#1 ->nl01l_event;
	initial
		#1 ->nl01O_event;
	initial
		#1 ->nl0ii_event;
	initial
		#1 ->nl0il_event;
	initial
		#1 ->nl0iO_event;
	initial
		#1 ->nl0li_event;
	initial
		#1 ->nl0ll_event;
	initial
		#1 ->nl0lO_event;
	initial
		#1 ->nl0Oi_event;
	initial
		#1 ->nl10i_event;
	initial
		#1 ->nl10l_event;
	initial
		#1 ->nl10O_event;
	initial
		#1 ->nl11i_event;
	initial
		#1 ->nl11l_event;
	initial
		#1 ->nl11O_event;
	initial
		#1 ->nl1ii_event;
	initial
		#1 ->nl1il_event;
	initial
		#1 ->nl1iO_event;
	initial
		#1 ->nl1li_event;
	initial
		#1 ->nl1ll_event;
	initial
		#1 ->nl1lO_event;
	initial
		#1 ->nl1Oi_event;
	initial
		#1 ->nl1Ol_event;
	initial
		#1 ->nl1OO_event;
	always @(n000i_event)
		n000i <= 1;
	always @(n000l_event)
		n000l <= 1;
	always @(n000O_event)
		n000O <= 1;
	always @(n00ii_event)
		n00ii <= 1;
	always @(n00il_event)
		n00il <= 1;
	always @(n00iO_event)
		n00iO <= 1;
	always @(n00li_event)
		n00li <= 1;
	always @(n00ll_event)
		n00ll <= 1;
	always @(n00lO_event)
		n00lO <= 1;
	always @(n00Oi_event)
		n00Oi <= 1;
	always @(n00Ol_event)
		n00Ol <= 1;
	always @(n00OO_event)
		n00OO <= 1;
	always @(n01i_event)
		n01i <= 1;
	always @(n01l_event)
		n01l <= 1;
	always @(n0i0i_event)
		n0i0i <= 1;
	always @(n0i0l_event)
		n0i0l <= 1;
	always @(n0i0O_event)
		n0i0O <= 1;
	always @(n0i1i_event)
		n0i1i <= 1;
	always @(n0i1l_event)
		n0i1l <= 1;
	always @(n0i1O_event)
		n0i1O <= 1;
	always @(n0iii_event)
		n0iii <= 1;
	always @(n0lOi_event)
		n0lOi <= 1;
	always @(n10i_event)
		n10i <= 1;
	always @(n1ii_event)
		n1ii <= 1;
	always @(n1il_event)
		n1il <= 1;
	always @(n1iO_event)
		n1iO <= 1;
	always @(n1li_event)
		n1li <= 1;
	always @(n1ll_event)
		n1ll <= 1;
	always @(n1lO_event)
		n1lO <= 1;
	always @(n1Oi_event)
		n1Oi <= 1;
	always @(n1Ol_event)
		n1Ol <= 1;
	always @(n1OO_event)
		n1OO <= 1;
	always @(ni0i_event)
		ni0i <= 1;
	always @(nilli_event)
		nilli <= 1;
	always @(nilll_event)
		nilll <= 1;
	always @(nillO_event)
		nillO <= 1;
	always @(nilOi_event)
		nilOi <= 1;
	always @(nilOl_event)
		nilOl <= 1;
	always @(nilOO_event)
		nilOO <= 1;
	always @(niO0i_event)
		niO0i <= 1;
	always @(niO0l_event)
		niO0l <= 1;
	always @(niO0O_event)
		niO0O <= 1;
	always @(niO1i_event)
		niO1i <= 1;
	always @(niO1l_event)
		niO1l <= 1;
	always @(niO1O_event)
		niO1O <= 1;
	always @(niOii_event)
		niOii <= 1;
	always @(niOil_event)
		niOil <= 1;
	always @(niOiO_event)
		niOiO <= 1;
	always @(niOli_event)
		niOli <= 1;
	always @(niOll_event)
		niOll <= 1;
	always @(niOlO_event)
		niOlO <= 1;
	always @(niOOi_event)
		niOOi <= 1;
	always @(niOOl_event)
		niOOl <= 1;
	always @(niOOO_event)
		niOOO <= 1;
	always @(nl00i_event)
		nl00i <= 1;
	always @(nl00l_event)
		nl00l <= 1;
	always @(nl00O_event)
		nl00O <= 1;
	always @(nl01i_event)
		nl01i <= 1;
	always @(nl01l_event)
		nl01l <= 1;
	always @(nl01O_event)
		nl01O <= 1;
	always @(nl0ii_event)
		nl0ii <= 1;
	always @(nl0il_event)
		nl0il <= 1;
	always @(nl0iO_event)
		nl0iO <= 1;
	always @(nl0li_event)
		nl0li <= 1;
	always @(nl0ll_event)
		nl0ll <= 1;
	always @(nl0lO_event)
		nl0lO <= 1;
	always @(nl0Oi_event)
		nl0Oi <= 1;
	always @(nl10i_event)
		nl10i <= 1;
	always @(nl10l_event)
		nl10l <= 1;
	always @(nl10O_event)
		nl10O <= 1;
	always @(nl11i_event)
		nl11i <= 1;
	always @(nl11l_event)
		nl11l <= 1;
	always @(nl11O_event)
		nl11O <= 1;
	always @(nl1ii_event)
		nl1ii <= 1;
	always @(nl1il_event)
		nl1il <= 1;
	always @(nl1iO_event)
		nl1iO <= 1;
	always @(nl1li_event)
		nl1li <= 1;
	always @(nl1ll_event)
		nl1ll <= 1;
	always @(nl1lO_event)
		nl1lO <= 1;
	always @(nl1Oi_event)
		nl1Oi <= 1;
	always @(nl1Ol_event)
		nl1Ol <= 1;
	always @(nl1OO_event)
		nl1OO <= 1;
	initial
	begin
		niiO = 0;
	end
	always @ (clk or wire_niil_PRN or wire_niil_CLRN)
	begin
		if (wire_niil_PRN == 1'b0) 
		begin
			niiO <= 1;
		end
		else if  (wire_niil_CLRN == 1'b0) 
		begin
			niiO <= 0;
		end
		else if  (wire_niil_ENA == 1'b1) 
		if (clk != niil_clk_prev && clk == 1'b1) 
		begin
			niiO <= n001i;
		end
		niil_clk_prev <= clk;
	end
	assign
		wire_niil_ENA = (clken & ((((wire_ni0l_q[2] & wire_ni0l_q[3]) & (~ wire_ni0l_q[0])) & (~ wire_ni0l_q[1])) & (n01ll6 ^ n01ll5))),
		wire_niil_CLRN = ((n01OO2 ^ n01OO1) & reset_n),
		wire_niil_PRN = (n01Ol4 ^ n01Ol3);
	event niiO_event;
	initial
		#1 ->niiO_event;
	always @(niiO_event)
		niiO <= 1;
	lpm_add_sub   n001O
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({n0iii, n0i0O, n0i0l, n0i0i, n0i1O, n0i1l, n0i1i, n00OO, n00Ol, n00Oi, n00lO, n00ll, n00li, n00iO, n00il, n00ii, n000O, n000l, n000i, n0lOi}),
	.datab({wire_n001O_result[19:0]}),
	.overflow(),
	.result(wire_n001O_result),
	.add_sub(),
	.cin()
	);
	defparam
		n001O.lpm_direction = "ADD",
		n001O.lpm_pipeline = 1,
		n001O.lpm_representation = "UNSIGNED",
		n001O.lpm_width = 20;
	lpm_add_sub   n10l
	( 
	.aclr((~ reset_n)),
	.cin(((n00i & (~ n01l)) & (n011O16 ^ n011O15))),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({n01l, n01i, n1OO, n1Ol, n1Oi, n1lO, n1ll, n1li, n1iO, n1il, n1ii, ni0i}),
	.datab({12{1'b0}}),
	.overflow(),
	.result(wire_n10l_result),
	.add_sub()
	);
	defparam
		n10l.lpm_direction = "ADD",
		n10l.lpm_pipeline = 1,
		n10l.lpm_representation = "SIGNED",
		n10l.lpm_width = 12;
	lpm_add_sub   ni1li
	( 
	.aclr((~ reset_n)),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({wire_n001O_result[19:0]}),
	.datab({{16{n0O1l}}, n0O1i, n0lOO, n0lOl, ni1iO}),
	.overflow(),
	.result(wire_ni1li_result),
	.add_sub(),
	.cin()
	);
	defparam
		ni1li.lpm_direction = "ADD",
		ni1li.lpm_pipeline = 1,
		ni1li.lpm_representation = "SIGNED",
		ni1li.lpm_width = 20;
	lpm_add_sub   niliO
	( 
	.add_sub(1'b1),
	.clken(clken),
	.clock(clk),
	.cout(),
	.dataa({nl0Oi, nl0lO, nl0ll, nl0li, nl0iO, nl0il, nl0ii, nl00O, nl00l, nl00i, nl01O, nl01l, nl01i, nl1OO, nl1Ol, nl1Oi, nl1lO, nl1ll, nl1li, nl1iO, nl1il, nl1ii, nl10O, nl10l, nl10i}),
	.datab({nl11O, nl11l, nl11i, niOOO, niOOl, niOOi, niOlO, niOll, niOli, niOiO, niOil, niOii, niO0O, niO0l, niO0i, niO1O, niO1l, niO1i, nilOO, nilOl, nilOi, nillO, nilll, nilli, n10i}),
	.overflow(),
	.result(wire_niliO_result),
	.aclr(),
	.cin()
	);
	defparam
		niliO.lpm_pipeline = 1,
		niliO.lpm_representation = "SIGNED",
		niliO.lpm_width = 25;
	lpm_counter   ni0l
	( 
	.aclr((~ reset_n)),
	.clk_en(clken),
	.clock(clk),
	.cout(),
	.q(wire_ni0l_q),
	.aload(),
	.aset(),
	.cin(),
	.cnt_en(),
	.data(),
	.sclr(),
	.sload(),
	.sset(),
	.updown()
	);
	defparam
		ni0l.lpm_direction = "UP",
		ni0l.lpm_modulus = 0,
		ni0l.lpm_port_updown = "PORT_CONNECTIVITY",
		ni0l.lpm_width = 4;
	lpm_mult   nilii
	( 
	.clken(clken),
	.clock(clk),
	.dataa({wire_nil0i_q_a[11:0]}),
	.datab({wire_nil0O_q_a[11:0]}),
	.result(wire_nilii_result),
	.aclr(),
	.sum()
	);
	defparam
		nilii.lpm_pipeline = 3,
		nilii.lpm_representation = "SIGNED",
		nilii.lpm_widtha = 12,
		nilii.lpm_widthb = 12,
		nilii.lpm_widthp = 24,
		nilii.lpm_widths = 24,
		nilii.lpm_hint = "INPUT_A_FIXED_VALUE=Bx, INPUT_B_FIXED_VALUE=Bx";
	lpm_mult   nilil
	( 
	.clken(clken),
	.clock(clk),
	.dataa({wire_nil0l_q_a[11:0]}),
	.datab({wire_nil0i_q_b[11:0]}),
	.result(wire_nilil_result),
	.aclr(),
	.sum()
	);
	defparam
		nilil.lpm_pipeline = 3,
		nilil.lpm_representation = "SIGNED",
		nilil.lpm_widtha = 12,
		nilil.lpm_widthb = 12,
		nilil.lpm_widthp = 24,
		nilil.lpm_widths = 24,
		nilil.lpm_hint = "INPUT_A_FIXED_VALUE=Bx, INPUT_B_FIXED_VALUE=Bx";
	assign		wire_n00l_dataout = (clken === 1'b1) ? wire_niliO_result[11] : ni0i;
	assign		wire_n00O_dataout = (clken === 1'b1) ? wire_niliO_result[12] : n1ii;
	assign		wire_n0ii_dataout = (clken === 1'b1) ? wire_niliO_result[13] : n1il;
	assign		wire_n0iil_dataout = (clken === 1'b1) ? phi_inc_i[0] : n0lOi;
	assign		wire_n0iiO_dataout = (clken === 1'b1) ? phi_inc_i[1] : n000i;
	assign		wire_n0il_dataout = (clken === 1'b1) ? wire_niliO_result[14] : n1iO;
	assign		wire_n0ili_dataout = (clken === 1'b1) ? phi_inc_i[2] : n000l;
	assign		wire_n0ill_dataout = (clken === 1'b1) ? phi_inc_i[3] : n000O;
	assign		wire_n0ilO_dataout = (clken === 1'b1) ? phi_inc_i[4] : n00ii;
	assign		wire_n0iO_dataout = (clken === 1'b1) ? wire_niliO_result[15] : n1li;
	assign		wire_n0iOi_dataout = (clken === 1'b1) ? phi_inc_i[5] : n00il;
	assign		wire_n0iOl_dataout = (clken === 1'b1) ? phi_inc_i[6] : n00iO;
	assign		wire_n0iOO_dataout = (clken === 1'b1) ? phi_inc_i[7] : n00li;
	assign		wire_n0l0i_dataout = (clken === 1'b1) ? phi_inc_i[11] : n00Ol;
	assign		wire_n0l0l_dataout = (clken === 1'b1) ? phi_inc_i[12] : n00OO;
	assign		wire_n0l0O_dataout = (clken === 1'b1) ? phi_inc_i[13] : n0i1i;
	assign		wire_n0l1i_dataout = (clken === 1'b1) ? phi_inc_i[8] : n00ll;
	assign		wire_n0l1l_dataout = (clken === 1'b1) ? phi_inc_i[9] : n00lO;
	assign		wire_n0l1O_dataout = (clken === 1'b1) ? phi_inc_i[10] : n00Oi;
	assign		wire_n0li_dataout = (clken === 1'b1) ? wire_niliO_result[16] : n1ll;
	assign		wire_n0lii_dataout = (clken === 1'b1) ? phi_inc_i[14] : n0i1l;
	assign		wire_n0lil_dataout = (clken === 1'b1) ? phi_inc_i[15] : n0i1O;
	assign		wire_n0liO_dataout = (clken === 1'b1) ? phi_inc_i[16] : n0i0i;
	assign		wire_n0ll_dataout = (clken === 1'b1) ? wire_niliO_result[17] : n1lO;
	assign		wire_n0lli_dataout = (clken === 1'b1) ? phi_inc_i[17] : n0i0l;
	assign		wire_n0lll_dataout = (clken === 1'b1) ? phi_inc_i[18] : n0i0O;
	assign		wire_n0llO_dataout = (clken === 1'b1) ? phi_inc_i[19] : n0iii;
	assign		wire_n0lO_dataout = (clken === 1'b1) ? wire_niliO_result[18] : n1Oi;
	assign		wire_n0Oi_dataout = (clken === 1'b1) ? wire_niliO_result[19] : n1Ol;
	assign		wire_n0Ol_dataout = (clken === 1'b1) ? wire_niliO_result[20] : n1OO;
	assign		wire_n0OO_dataout = (clken === 1'b1) ? wire_niliO_result[21] : n01i;
	assign		wire_n11i_dataout = (clken === 1'b1) ? wire_nilii_result[22] : nl0ll;
	assign		wire_n11l_dataout = (clken === 1'b1) ? wire_nilii_result[23] : nl0lO;
	and(wire_n11O_dataout, nl0Oi, ~(clken));
	assign		wire_ni1i_dataout = (clken === 1'b1) ? wire_niliO_result[22] : n01l;
	assign		wire_nl0Ol_dataout = (clken === 1'b1) ? wire_nilil_result[0] : n10i;
	assign		wire_nl0OO_dataout = (clken === 1'b1) ? wire_nilil_result[1] : nilli;
	assign		wire_nli0i_dataout = (clken === 1'b1) ? wire_nilil_result[5] : nilOl;
	assign		wire_nli0l_dataout = (clken === 1'b1) ? wire_nilil_result[6] : nilOO;
	assign		wire_nli0O_dataout = (clken === 1'b1) ? wire_nilil_result[7] : niO1i;
	assign		wire_nli1i_dataout = (clken === 1'b1) ? wire_nilil_result[2] : nilll;
	assign		wire_nli1l_dataout = (clken === 1'b1) ? wire_nilil_result[3] : nillO;
	assign		wire_nli1O_dataout = (clken === 1'b1) ? wire_nilil_result[4] : nilOi;
	assign		wire_nliii_dataout = (clken === 1'b1) ? wire_nilil_result[8] : niO1l;
	assign		wire_nliil_dataout = (clken === 1'b1) ? wire_nilil_result[9] : niO1O;
	assign		wire_nliiO_dataout = (clken === 1'b1) ? wire_nilil_result[10] : niO0i;
	assign		wire_nlili_dataout = (clken === 1'b1) ? wire_nilil_result[11] : niO0l;
	assign		wire_nlill_dataout = (clken === 1'b1) ? wire_nilil_result[12] : niO0O;
	assign		wire_nlilO_dataout = (clken === 1'b1) ? wire_nilil_result[13] : niOii;
	assign		wire_nliOi_dataout = (clken === 1'b1) ? wire_nilil_result[14] : niOil;
	assign		wire_nliOl_dataout = (clken === 1'b1) ? wire_nilil_result[15] : niOiO;
	assign		wire_nliOO_dataout = (clken === 1'b1) ? wire_nilil_result[16] : niOli;
	assign		wire_nll0i_dataout = (clken === 1'b1) ? wire_nilil_result[20] : niOOl;
	assign		wire_nll0l_dataout = (clken === 1'b1) ? wire_nilil_result[21] : niOOO;
	assign		wire_nll0O_dataout = (clken === 1'b1) ? wire_nilil_result[22] : nl11i;
	assign		wire_nll1i_dataout = (clken === 1'b1) ? wire_nilil_result[17] : niOll;
	assign		wire_nll1l_dataout = (clken === 1'b1) ? wire_nilil_result[18] : niOlO;
	assign		wire_nll1O_dataout = (clken === 1'b1) ? wire_nilil_result[19] : niOOi;
	assign		wire_nllii_dataout = (clken === 1'b1) ? wire_nilil_result[23] : nl11l;
	and(wire_nllil_dataout, nl11O, ~(clken));
	assign		wire_nlliO_dataout = (clken === 1'b1) ? wire_nilii_result[0] : nl10i;
	assign		wire_nllli_dataout = (clken === 1'b1) ? wire_nilii_result[1] : nl10l;
	assign		wire_nllll_dataout = (clken === 1'b1) ? wire_nilii_result[2] : nl10O;
	assign		wire_nlllO_dataout = (clken === 1'b1) ? wire_nilii_result[3] : nl1ii;
	assign		wire_nllOi_dataout = (clken === 1'b1) ? wire_nilii_result[4] : nl1il;
	assign		wire_nllOl_dataout = (clken === 1'b1) ? wire_nilii_result[5] : nl1iO;
	assign		wire_nllOO_dataout = (clken === 1'b1) ? wire_nilii_result[6] : nl1li;
	assign		wire_nlO0i_dataout = (clken === 1'b1) ? wire_nilii_result[10] : nl1Ol;
	assign		wire_nlO0l_dataout = (clken === 1'b1) ? wire_nilii_result[11] : nl1OO;
	assign		wire_nlO0O_dataout = (clken === 1'b1) ? wire_nilii_result[12] : nl01i;
	assign		wire_nlO1i_dataout = (clken === 1'b1) ? wire_nilii_result[7] : nl1ll;
	assign		wire_nlO1l_dataout = (clken === 1'b1) ? wire_nilii_result[8] : nl1lO;
	assign		wire_nlO1O_dataout = (clken === 1'b1) ? wire_nilii_result[9] : nl1Oi;
	assign		wire_nlOii_dataout = (clken === 1'b1) ? wire_nilii_result[13] : nl01l;
	assign		wire_nlOil_dataout = (clken === 1'b1) ? wire_nilii_result[14] : nl01O;
	assign		wire_nlOiO_dataout = (clken === 1'b1) ? wire_nilii_result[15] : nl00i;
	assign		wire_nlOli_dataout = (clken === 1'b1) ? wire_nilii_result[16] : nl00l;
	assign		wire_nlOll_dataout = (clken === 1'b1) ? wire_nilii_result[17] : nl00O;
	assign		wire_nlOlO_dataout = (clken === 1'b1) ? wire_nilii_result[18] : nl0ii;
	assign		wire_nlOOi_dataout = (clken === 1'b1) ? wire_nilii_result[19] : nl0il;
	assign		wire_nlOOl_dataout = (clken === 1'b1) ? wire_nilii_result[20] : nl0iO;
	assign		wire_nlOOO_dataout = (clken === 1'b1) ? wire_nilii_result[21] : nl0li;
	oper_add   ni10l
	( 
	.a({ni10i, ni11l, ((n011i20 ^ n011i19) & ni11i), n0OOO, n0OOl}),
	.b({{4{1'b0}}, ni10i}),
	.cin(1'b0),
	.cout(),
	.o(wire_ni10l_o));
	defparam
		ni10l.sgate_representation = 0,
		ni10l.width_a = 5,
		ni10l.width_b = 5,
		ni10l.width_o = 5;
	oper_add   nil1O
	( 
	.a({1'b0, ni0li, ni0iO, ni0il, ni0ii, ni00O, ((n011l18 ^ n011l17) & ni00l), ni00i}),
	.b({{2{1'b0}}, 1'b1, {5{1'b0}}}),
	.cin(1'b0),
	.cout(),
	.o(wire_nil1O_o));
	defparam
		nil1O.sgate_representation = 0,
		nil1O.width_a = 8,
		nil1O.width_b = 8,
		nil1O.width_o = 8;
	assign
		fsin_o = {wire_n10l_result[11:0]},
		n001i = 1'b1,
		n01iO = ((((((((((((((~ wire_niliO_result[11]) & (~ wire_niliO_result[12])) & (~ wire_niliO_result[13])) & (~ wire_niliO_result[14])) & (~ wire_niliO_result[15])) & (~ wire_niliO_result[16])) & (~ wire_niliO_result[17])) & (~ wire_niliO_result[18])) & (~ wire_niliO_result[19])) & (~ wire_niliO_result[20])) & (~ wire_niliO_result[21])) & (~ wire_niliO_result[22])) & (~ wire_niliO_result[23])) & (n010l14 ^ n010l13)),
		out_valid = niiO;
endmodule //NCO
//synopsys translate_on
//VALID FILE
